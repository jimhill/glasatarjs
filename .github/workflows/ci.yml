name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install system dependencies for canvas
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check formatting
        run: npm run format:check
      
      - name: Run linting
        run: npm run lint
      
      - name: Type checking
        run: npm run type-check
      
      - name: Security audit
        run: npm run security-check
      
      - name: Run tests
        run: npm run test:run
      
      - name: Run tests with coverage
        run: npm run test:coverage
  
  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install system dependencies for canvas
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build library
        run: npm run build:lib
      
      - name: Build demo
        run: npm run build:demo
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            dist-demo/
          retention-days: 30
  
  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install system dependencies for canvas
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build package
        run: npm run build:lib
      
      - name: Check if version changed
        id: version-check
        run: |
          CURRENT_VERSION=$(npm view glasatar version 2>/dev/null || echo "0.0.0")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "package-version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          if [ "$CURRENT_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "should-publish=true" >> $GITHUB_OUTPUT
            echo "Version changed from $CURRENT_VERSION to $PACKAGE_VERSION"
          else
            echo "should-publish=false" >> $GITHUB_OUTPUT
            echo "Version unchanged: $PACKAGE_VERSION"
          fi
      
      - name: Publish to NPM
        if: steps.version-check.outputs.should-publish == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create GitHub Release
        if: steps.version-check.outputs.should-publish == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version-check.outputs.package-version }}
          release_name: Release v${{ steps.version-check.outputs.package-version }}
          draft: false
          prerelease: false
          body: |
            ## Changes in v${{ steps.version-check.outputs.package-version }}
            
            See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
            
            ### Installation
            ```bash
            npm install glasatar@${{ steps.version-check.outputs.package-version }}
            ```
            
            ### Usage
            See [README.md](README.md) for usage instructions.

  deploy-demo:
    name: Deploy Demo to GitHub Pages
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install system dependencies for canvas
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build demo
        run: npm run build:demo
        env:
          NODE_ENV: production
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload demo artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist-demo'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4